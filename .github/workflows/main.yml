name: Build & Deploy Spring Back-End

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
    Build:
        name: Build
        runs-on: ubuntu-latest
        permissions: read-all
        steps:
            - name: checkout
              uses: actions/checkout@v2
              with:
                fetch-depth: 0
            - name: Set up JDK 17
              uses: actions/setup-java@v3
              with:
                distribution: 'corretto'
                java-version: '17'
            - name: Build with Maven
              run: mvn -B package -Dmaven.test.skip --file pom.xml 

    UnitTesting:
      name: Unit Testing
      needs: Build
      runs-on: ubuntu-latest
      permissions: read-all
      steps:
          - uses: actions/checkout@v2
          - uses: actions/setup-java@v3
            with:
              distribution: 'corretto'
              java-version: '17'
          - name: Test
            run: mvn test

    IntegrationTesting:
      name: Integration Testing
      needs: UnitTesting
      runs-on: ubuntu-latest
      permissions: read-all 
      services:
        mysql:
          image: mysql:latest
          env:
            MYSQL_USER: root
            MYSQL_PASSWORD: RooTPassworD1!
          ports:
            - 3306:3306      
  
      steps:
      - name: Checkout code
        uses: actions/checkout@v2
  
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '17'
       
      - name: Debug
        run: |
          echo "Checking connectivity to MySQL..."
          telnet mysql 3306
          netstat -an
          curl http://localhost:3306
          cat /etc/hosts
          cat /etc/resolv.conf
        continue-on-error: true
      
      - name: Test
        run: mvn verify


    SonarQube:
      name: SonarQube
      needs: IntegrationTesting
      runs-on: ubuntu-latest
      permissions: read-all
      steps:
          - name: checkout
            uses: actions/checkout@v2
            with:
              fetch-depth: 0
          - name: Set up JDK 17
            uses: actions/setup-java@v3
            with:
              distribution: 'corretto'
              java-version: '17'
          - name: Build with Maven
            run: mvn -B package --file pom.xml
          - name: SonarQube Scan
            env:
              SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
              SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
              SONAR_PROJECT_TOKEN: ${{ secrets.SONAR_PROJECT_TOKEN }}
            run: mvn sonar:sonar -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_TOKEN }}
    


    build-and-push-docker:
        needs: SonarQube
        runs-on: ubuntu-latest
        steps:
        - uses: actions/checkout@v2 
          
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v1
          
        - name: Login to DockerHub
          uses: docker/login-action@v1 
          with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}
            
        - name: Build and push Docker image
          uses: docker/build-push-action@v2
          with:
            context: .
            file: Dockerfile.ci
            push: true
            tags: orangeplayah/s3db-ip-pokemonrace-backend:latest 
    